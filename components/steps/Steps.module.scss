@use "@/styles/abstracts/mixins" as *;
@use "@/styles/abstracts/variables" as *;
@use "@/styles/abstracts/functions" as *;

.stepsWrapper {
  --circle-border-width: 2px;
  border-radius: 0.625rem;

  @include md {
    padding: 2.75em 0 0 0;
  }

  @include lg {
    width: 90%;
    padding: 6.25em 0 0 0;
  }

  &.light {
    @include bg-colour($clr-light);
  }

  &.dark {
    @include bg-colour($clr-dark);
    @include text-colour($clr-light);

    .circle {
      background-color: transparent;
    }
  }
}

.header {
  text-align: center;

  @include md {
    text-align: start;
    margin-bottom: calc(2.5rem - var(--circle-border-width));
  }

  @include lg {
    margin-bottom: calc(5rem - var(--circle-border-width));
  }
}

.title {
  margin-bottom: 1.5rem;
}

.stepsList {
  text-align: center;
  padding: 0;
  margin: 0;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  --gap-md: 0.625rem;
  --gap-lg: 2.5rem;
  --gap-xl: 5.938rem;

  @include md {
    flex-direction: row;
    text-align: start;
    gap: var(--gap-md);
    min-width: 689px;
  }

  @include lg {
    gap: var(--gap-lg);
  }

  @include xl {
    gap: var(--gap-xl);
  }
}

.stepItem {
  display: flex;
  flex-direction: column;
  --circle-line-height: 2px;
  --circle-diameter: 31px;

  @include md {
    flex-direction: column;
    width: 100%;

    // Add a line between steps, except after the last step
    &:not(:last-child)::before {
      position: relative; // Position relative to allow positioning of the pseudo-element
      content: "";
      display: block;
      height: var(--circle-line-height);
      width: calc(
        100% + var(--gap-md)
      ); // Set width to full width plus flex gap
      top: calc(var(--circle-diameter) / 2); // Position vertically centered
      left: calc(var(--circle-diameter) / 2); // Position horizontally centered
      background-color: to-hsl-comma-sep($clr-secondary);
    }
  }

  @include lg {
    &:not(:last-child)::before {
      width: calc(100% + var(--gap-lg));
    }
  }

  @include xl {
    &:not(:last-child)::before {
      width: calc(100% + var(--gap-xl));
    }
  }
}

.stepContent {
  @include md {
    max-width: 285px;
    min-width: 223px;
  }

  @include xl {
    min-width: 285px;
  }
}

.circle {
  @include md {
    width: var(--circle-diameter);
    height: var(--circle-diameter);
    border: var(--circle-border-width) solid;
    border-radius: 50%;
    border-color: to-hsl-comma-sep($clr-primary);
    z-index: 1; // Ensure the circle appears above connecting line
    @include bg-colour($clr-light);
  }
}

.stepNumber {
  display: block;
  line-height: 1;
  margin: 3.5rem 0 1.5rem;
  @include text-colour($clr-secondary);

  @include md {
    margin: 3rem 0 2.625rem;
  }

  @include lg {
    margin: 4.188rem 0 2.375rem;
  }
}

.stepTitle {
  margin: 0 0 1.5rem;
  line-height: 1.143;
  @include font-size(500);

  @include md {
    max-width: 200px;
    margin-bottom: 2.375rem;
  }

  @include lg {
    max-width: 255px;
    margin-bottom: 2.625rem;
    @include font-size(550);
    line-height: 1.125;
  }
}

.stepDescription {
  @include font-size(200);
  line-height: 1.667;
  @include lg {
    @include line-height(300);
    @include font-size(300);
  }
}
